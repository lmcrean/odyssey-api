name: Test Branch Integration

on:
  workflow_call:
    inputs:
      web_url:
        required: true
        type: string
      api_url:
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🛒 Checkout Repository
        uses: actions/checkout@v4
      
      - name: 🔍 Environment Validation
        run: |
          echo "🧪 Web App: ${{ inputs.web_url }}"
          echo "🧪 API Service: ${{ inputs.api_url }}"
          
          if [[ ! "${{ inputs.web_url }}" =~ ^https?:// ]] || [[ ! "${{ inputs.api_url }}" =~ ^https?:// ]]; then
            echo "❌ Invalid URL format"
            exit 1
          fi
      
      - name: 🏥 API Health Check
        run: |
          echo "🔍 Testing API health endpoint..."
          
          for i in {1..3}; do
            echo "Health check attempt $i/3..."
            
            if curl -f "${{ inputs.api_url }}/health" -m 15; then
              echo "✅ API health check passed"
              break
            fi
            
            if [ $i -eq 3 ]; then
              echo "❌ API health check failed after 3 attempts"
              exit 1
            fi
            
            echo "⏳ Waiting 10 seconds..."
            sleep 10
          done
      
      - name: 📡 API Endpoint Tests
        run: |
          echo "🔍 Testing key API endpoints..."
          API_URL="${{ inputs.api_url }}"
          
          # Test GitHub API endpoints (if available)
          echo "Testing GitHub API endpoints..."
          
          # Test basic API routes
          curl -f "$API_URL/api/github/health" -m 10 || {
            echo "⚠️ GitHub API health endpoint not available"
          }
          
          # Test if API responds with proper JSON
          echo "Testing API JSON response..."
          RESPONSE=$(curl -s "$API_URL/health" -m 10)
          if [[ "$RESPONSE" == *"{"* ]]; then
            echo "✅ API returns JSON responses"
          else
            echo "⚠️ API response format may be incorrect"
          fi
          
          echo "✅ API endpoint tests completed"
      
      - name: 🔗 CORS Configuration Test
        run: |
          echo "🔍 Testing CORS configuration..."
          
          # Test if CORS is properly configured
          curl -H "Origin: ${{ inputs.web_url }}" \
               -H "Access-Control-Request-Method: GET" \
               -H "Access-Control-Request-Headers: Content-Type" \
               -X OPTIONS \
               "${{ inputs.api_url }}/health" -m 10 || {
            echo "⚠️ CORS preflight test failed"
          }
          
          echo "✅ CORS configuration test completed"
      
      - name: 📱 Web App Accessibility Test
        run: |
          echo "🔍 Testing web app accessibility..."
          
          # Test if web app serves the main page
          if curl -f "${{ inputs.web_url }}" -m 15 >/dev/null 2>&1; then
            echo "✅ Web app is serving content"
          else
            echo "❌ Web app accessibility test failed"
            exit 1
          fi
      
      - name: 🔌 Integration Connectivity Test
        run: |
          echo "🔍 Testing web app to API connectivity..."
          
          # Test if web app can reach API (by checking if API URL is reachable from web context)
          WEB_URL="${{ inputs.web_url }}"
          API_URL="${{ inputs.api_url }}"
          
          # Extract domain from web URL to test cross-origin setup
          WEB_DOMAIN=$(echo "$WEB_URL" | sed 's|https\?://||' | sed 's|/.*||')
          API_DOMAIN=$(echo "$API_URL" | sed 's|https\?://||' | sed 's|/.*||')
          
          echo "🌐 Web domain: $WEB_DOMAIN"
          echo "🌐 API domain: $API_DOMAIN"
          
          if [[ "$WEB_DOMAIN" != "$API_DOMAIN" ]]; then
            echo "✅ Cross-origin setup detected (web and API on different domains)"
          else
            echo "✅ Same-origin setup detected"
          fi
          
          echo "✅ Integration connectivity test completed"
      
      - name: 🧪 Performance Test
        run: |
          echo "🔍 Running basic performance tests..."
          
          # Test response times
          echo "Testing API response time..."
          API_TIME=$(curl -w "%{time_total}" -o /dev/null -s "${{ inputs.api_url }}/health")
          echo "API response time: ${API_TIME}s"
          
          echo "Testing web app response time..."
          WEB_TIME=$(curl -w "%{time_total}" -o /dev/null -s "${{ inputs.web_url }}")
          echo "Web app response time: ${WEB_TIME}s"
          
          echo "✅ Performance tests completed"
      
      - name: 🔄 Integration Test Summary
        run: |
          echo "🧪 Integration Results: ✅ PASSED"
          echo "🌐 Web App: ${{ inputs.web_url }}"
          echo "⚡ API Service: ${{ inputs.api_url }}"
          echo "✅ Both services are healthy and properly configured"