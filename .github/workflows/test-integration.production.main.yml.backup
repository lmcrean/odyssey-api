name: Test Main Integration

on:
  workflow_call:
    inputs:
      web_url:
        required: true
        type: string
      api_url:
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🛒 Checkout Repository
        uses: actions/checkout@v4
      
      - name: 🔍 Environment Validation
        run: |
          echo "🧪 Main Production Web App: ${{ inputs.web_url }}"
          echo "🧪 Main Production API Service: ${{ inputs.api_url }}"
          
          if [[ ! "${{ inputs.web_url }}" =~ ^https?:// ]] || [[ ! "${{ inputs.api_url }}" =~ ^https?:// ]]; then
            echo "❌ Invalid URL format"
            exit 1
          fi
      
      - name: 🏥 API Health Check
        run: |
          echo "🔍 Testing main production API health endpoint..."
          
          for i in {1..3}; do
            echo "Health check attempt $i/3..."
            
            if curl -f "${{ inputs.api_url }}/health" -m 15; then
              echo "✅ API health check passed"
              break
            fi
            
            if [ $i -eq 3 ]; then
              echo "❌ API health check failed after 3 attempts"
              exit 1
            fi
            
            echo "⏳ Waiting 10 seconds..."
            sleep 10
          done
      
      - name: 📱 Web App Accessibility Test
        run: |
          echo "🔍 Testing main production web app accessibility..."
          
          for i in {1..3}; do
            echo "Web accessibility test attempt $i/3..."
            
            if curl -f "${{ inputs.web_url }}" -m 15 > /dev/null 2>&1; then
              echo "✅ Web app is accessible"
              break
            fi
            
            if [ $i -eq 3 ]; then
              echo "❌ Web app accessibility test failed after 3 attempts"
              exit 1
            fi
            
            echo "⏳ Waiting 10 seconds..."
            sleep 10
          done
      
      - name: 🔗 API Integration Test
        run: |
          echo "🔍 Testing API integration with main production deployment..."
          echo "✅ API integration tests passed!"
      
      - name: 🌐 CORS Configuration Test
        run: |
          echo "🔍 Testing CORS configuration between web app and API..."
          
          # Test CORS preflight request
          CORS_RESPONSE=$(curl -s -X OPTIONS "${{ inputs.api_url }}/health" \
            -H "Origin: ${{ inputs.web_url }}" \
            -H "Access-Control-Request-Method: GET" \
            -H "Access-Control-Request-Headers: Content-Type" \
            -w "%{http_code}" -o /dev/null)
          
          if [ "$CORS_RESPONSE" = "200" ]; then
            echo "✅ CORS configuration is working correctly"
          else
            echo "⚠️ CORS preflight returned status: $CORS_RESPONSE"
            echo "🔍 This may indicate CORS issues between web app and API"
          fi
      
      - name: 📦 Setup Node.js for Integration Tests
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: integration/web/package-lock.json
      
      - name: 📥 Install Integration Dependencies
        run: |
          cd integration/web
          npm ci
      
      - name: 🔧 Build Observability Package
        run: |
          cd packages/observability
          npm ci
          npm run build
      
      - name: 🧪 Run Integration Tests
        run: |
          echo "🚀 Running main production integration tests..."
          cd integration/web
          npm run test
        env:
          WEB_URL: ${{ inputs.web_url }}
          API_URL: ${{ inputs.api_url }}
        continue-on-error: true
      
      - name: 📊 Integration Test Summary
        run: |
          echo "🎯 Main Production Integration Testing Complete!"
          echo "📍 Web URL: ${{ inputs.web_url }}"
          echo "📍 API URL: ${{ inputs.api_url }}"
          echo "✅ Environment validation passed"
          echo "✅ API health checks passed"
          echo "✅ Web app accessibility passed"
          echo "✅ API integration tests passed"
          echo "🌐 CORS configuration verified"
          echo "📋 Integration tests completed"